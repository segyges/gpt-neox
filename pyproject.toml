[tool.poetry]
name = "gpt-neox"
version = "3.0.0"
description = "An implementation of model parallel autoregressive transformers on GPUs, based on the DeepSpeed library."
authors = ["Eleuther AI"]
license = "Apache-2.0"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.10"
pytorch = { version = "^2.2.1", source = "pytorch-official" }
torchaudio = { version =  "^2.2.1", source = "pytorch-official" }
torchvision = { version = "^2.2.1", source = "pytorch-official" }
best-download = "^0.1.2"
deepspeed = { git = "git+https://github.com/EleutherAI/DeeperSpeed.git", rev = "02e2ebf7dee6aaab3d89094ed470a4609763c742" }
ftfy = "^6.0.1"
lm_dataformat = { git = "git+https://github.com/EleutherAI/lm_dataformat.git", rev = "4eec05349977071bf67fc072290b95e31c8dd836" }
huggingface_hub = "^0.11.0"
jinja2 = "3.1.3"
lm_eval = "0.4.1"
mpi4py = "^3.0.3"
numpy = "^1.22.0"
pybind11 = "^2.6.2"
regex = "*"
sentencepiece = "*"
six = "*"
tiktoken = "^0.1.2"
tokenizers = "^0.12.1"
transformers = "4.36.0"

[tool.poetry.group.onebitadam]
optional = false

[tool.poetry.group.onebitadam.dependencies]
cupy-cuda111 = "^8.6.0"

[tool.poetry.group.flashattention]
optional = false

[tool.poetry.group.flashattention.dependencies]
flash-attn = "2.4.2"

[tool.poetry.group.apex]
optional = false

[tool.poetry.group.apex.dependencies]
pip = "23.3.2"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
autopep8 = "^1.5.6"
clang-format = "^13.0.1"
pre-commit = "^2.17.0"
pytest = "^6.2.3"
pytest-cov = "^2.11.1"
pytest-forked = "^1.3.0"
pytest-html = "^4.1.1"

[tool.poetry.group.s3]
optional = true

[tool.poetry.group.s3.dependencies]
boto3 = "*"
hf-transfer = "^0.1.3"

[tool.poetry.group.wandb]
optional = true

[tool.poetry.group.wandb.dependencies]
wandb = "^0.10.28"

[tool.poetry.group.tensorboard]
optional = true

[tool.poetry.group.tensorboard.dependencies]
tensorboard = "2.13.0"

[tool.poetry.source]
name = "pytorch-official"
url = "https://download.pytorch.org/whl/cu121"
priority = "explicit"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
